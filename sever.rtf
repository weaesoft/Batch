{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red101\green40\blue139;\red242\green242\blue242;\red38\green38\blue38;
\red100\green100\blue100;\red152\green37\blue37;\red55\green124\blue30;\red154\green154\blue154;\red137\green74\blue30;
\red59\green81\blue185;}
{\*\expandedcolortbl;;\cssrgb\c47843\c24314\c61569;\cssrgb\c96078\c96078\c96078;\cssrgb\c20000\c20000\c20000;
\cssrgb\c46667\c46667\c46667;\cssrgb\c66667\c21569\c19216;\cssrgb\c26667\c54902\c15294;\cssrgb\c66667\c66667\c66667;\cssrgb\c61176\c36471\c15294;
\cssrgb\c29412\c41176\c77647;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl540\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 const\cf4 \strokec4  \cf5 \strokec5 \{
\f1\b \cf2 \strokec2 Pool
\f0\b0 \cf5 \strokec5 \}\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf6 \strokec6 require
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 "\cf7 \strokec7 pg\cf5 \strokec5 "\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl540\partightenfactor0

\f2\i \cf8 \cb3 \strokec8 // const express = require ("express")
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 // const app = express();
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 // app.use(express.json())
\f0\i0 \cf4 \cb1 \strokec4 \
\

\f2\i \cf8 \cb3 \strokec8 //dbread role with SELECT 
\f0\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf2 \cb3 \strokec2 const\cf4 \strokec4  \cf2 \strokec2 dbReadPool\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  
\f1\b \cf2 \strokec2 Pool
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 "\cf7 \strokec7 user\cf5 \strokec5 ":\cf4 \strokec4  \cf5 \strokec5 "\cf7 \strokec7 postgres\cf5 \strokec5 ",\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 "\cf7 \strokec7 password\cf5 \strokec5 "\cf4 \strokec4  \cf5 \strokec5 :\cf4 \strokec4  \cf5 \strokec5 "\cf7 \strokec7 1234\cf5 \strokec5 ",\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 "\cf7 \strokec7 host\cf5 \strokec5 "\cf4 \strokec4  \cf5 \strokec5 :\cf4 \strokec4  \cf5 \strokec5 "\cf7 \strokec7 localhost\cf5 \strokec5 ",\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 "\cf7 \strokec7 port\cf5 \strokec5 "\cf4 \strokec4  \cf5 \strokec5 :\cf4 \strokec4  \cf9 \strokec9 5432\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 "\cf7 \strokec7 database\cf5 \strokec5 "\cf4 \strokec4  \cf5 \strokec5 :\cf4 \strokec4  \cf5 \strokec5 "\cf7 \strokec7 postgres\cf5 \strokec5 "\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl540\partightenfactor0

\f2\i \cf8 \cb3 \strokec8 //create path employees
\f0\i0 \cf4 \cb1 \strokec4 \
\

\f2\i \cf8 \cb3 \strokec8 // app.get("/", (req, res) => res.sendFile(`$\{__dirname\}/index.html`))
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 // app.get("/employees", async (req, res) => \{
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 //     const rows = await readTodos();
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 //     res.setHeader("content-type", "application/json")
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 //     res.send(JSON.stringify(rows))
\f0\i0 \cf4 \cb1 \strokec4 \

\f2\i \cf8 \cb3 \strokec8 // \})
\f0\i0 \cf4 \cb1 \strokec4 \
\

\f2\i \cf8 \cb3 \strokec8 //  app.listen(8080, () => console.log("Web server is listening.. on port 8080"))
\f0\i0 \cf4 \cb1 \strokec4 \
\

\f2\i \cf8 \cb3 \strokec8 // start test connect
\f0\i0 \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl540\partightenfactor0
\cf2 \cb3 \strokec2 var\cf4 \strokec4  
\f1\b \cf2 \strokec2 fs
\f0\b0 \cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf6 \strokec6 require
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 fs\cf5 \strokec5 '\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  
\f1\b \cf2 \strokec2 http
\f0\b0 \cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf6 \strokec6 require
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 http\cf5 \strokec5 '\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  
\f1\b \cf2 \strokec2 https
\f0\b0 \cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf6 \strokec6 require
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 https\cf5 \strokec5 '\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 const\cf4 \strokec4  \cf2 \strokec2 options\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 key\cf5 \strokec5 :\cf4 \strokec4  
\f1\b \cf2 \strokec2 fs
\f0\b0 \cf5 \strokec5 .
\f1\b \cf6 \strokec6 readFileSync
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 privateKey.key\cf5 \strokec5 '\cf4 \strokec4 )\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 cert\cf5 \strokec5 :\cf4 \strokec4  
\f1\b \cf2 \strokec2 fs
\f0\b0 \cf5 \strokec5 .
\f1\b \cf6 \strokec6 readFileSync
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 certificate.crt\cf5 \strokec5 '\cf4 \strokec4 )\cf5 \strokec5 ,\cf4 \strokec4     \cb1 \
\cb3  \cb1 \
\cb3   \cf5 \strokec5 \};\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl540\partightenfactor0
\cf2 \cb3 \strokec2 var\cf4 \strokec4  
\f1\b \cf6 \strokec6 express
\f0\b0 \cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf6 \strokec6 require
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 express\cf5 \strokec5 '\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf2 \strokec2 app\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf6 \strokec6 express
\f0\b0 \cf4 \strokec4 ()\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 app\cf5 \strokec5 .
\f1\b \cf6 \strokec6 use
\f0\b0 \cf4 \strokec4 (
\f1\b \cf6 \strokec6 express
\f0\b0 \cf5 \strokec5 .
\f1\b \cf6 \strokec6 json
\f0\b0 \cf4 \strokec4 ())\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl540\partightenfactor0

\f2\i \cf8 \cb3 \strokec8 // your express configuration here
\f0\i0 \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl540\partightenfactor0
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf2 \strokec2 httpServer\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf2 \strokec2 http
\f0\b0 \cf5 \strokec5 .
\f1\b \cf6 \strokec6 createServer
\f0\b0 \cf4 \strokec4 (\cf2 \strokec2 app\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf2 \strokec2 httpsServer\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  
\f1\b \cf2 \strokec2 https
\f0\b0 \cf5 \strokec5 .
\f1\b \cf6 \strokec6 createServer
\f0\b0 \cf4 \strokec4 (\cf2 \strokec2 options\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 app\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 httpServer\cf5 \strokec5 .
\f1\b \cf6 \strokec6 listen
\f0\b0 \cf4 \strokec4 (\cf9 \strokec9 8080\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 httpsServer\cf5 \strokec5 .
\f1\b \cf6 \strokec6 listen
\f0\b0 \cf4 \strokec4 (\cf9 \strokec9 443\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 app\cf5 \strokec5 .
\f1\b \cf6 \strokec6 get
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 "\cf7 \strokec7 /employees\cf5 \strokec5 ",\cf4 \strokec4  \cf10 \strokec10 async\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 req\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 res\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 =>\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3         \cf2 \strokec2 const\cf4 \strokec4  \cf2 \strokec2 rows\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf10 \strokec10 await\cf4 \strokec4  
\f1\b \cf6 \strokec6 readTodos
\f0\b0 \cf4 \strokec4 ()\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 res\cf5 \strokec5 .
\f1\b \cf6 \strokec6 setHeader
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 "\cf7 \strokec7 content-type\cf5 \strokec5 ",\cf4 \strokec4  \cf5 \strokec5 "\cf7 \strokec7 application/json\cf5 \strokec5 "\cf4 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 res\cf5 \strokec5 .
\f1\b \cf6 \strokec6 setHeader
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 '\cf7 \strokec7 Access-Control-Allow-Origin\cf5 \strokec5 ',\cf4 \strokec4  \cf5 \strokec5 '\cf7 \strokec7 *\cf5 \strokec5 '\cf4 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 res\cf5 \strokec5 .
\f1\b \cf6 \strokec6 send
\f0\b0 \cf4 \strokec4 (\cf2 \strokec2 JSON\cf5 \strokec5 .
\f1\b \cf6 \strokec6 stringify
\f0\b0 \cf4 \strokec4 (\cf2 \strokec2 rows\cf4 \strokec4 ))\cb1 \
\cb3     \cf5 \strokec5 \}\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl540\partightenfactor0

\f2\i \cf8 \cb3 \strokec8 //app.listen(8080, () => console.log("Web server is listening.. on port 8443"))
\f0\i0 \cf4 \cb1 \strokec4 \
\
\
\
\pard\pardeftab720\sl540\partightenfactor0

\f1\b \cf6 \cb3 \strokec6 start
\f0\b0 \cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl540\partightenfactor0
\cf10 \cb3 \strokec10 async\cf4 \strokec4  \cf2 \strokec2 function\cf4 \strokec4  
\f1\b \cf6 \strokec6 start
\f0\b0 \cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 await\cf4 \strokec4  
\f1\b \cf6 \strokec6 connect
\f0\b0 \cf4 \strokec4 ()\cf5 \strokec5 ;\cf4 \strokec4  \cb1 \
\cb3     \cf2 \strokec2 const\cf4 \strokec4  \cf2 \strokec2 employees\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf10 \strokec10 await\cf4 \strokec4  
\f1\b \cf6 \strokec6 readTodos
\f0\b0 \cf4 \strokec4 ()\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 console\cf5 \strokec5 .
\f1\b \cf6 \strokec6 log
\f0\b0 \cf4 \strokec4 (\cf2 \strokec2 employees\cf4 \strokec4 )\cb1 \
\cb3     \cb1 \
\pard\pardeftab720\sl540\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl540\partightenfactor0

\f2\i \cf8 \cb3 \strokec8 // function connect
\f0\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf10 \cb3 \strokec10 async\cf4 \strokec4  \cf2 \strokec2 function\cf4 \strokec4  
\f1\b \cf6 \strokec6 connect
\f0\b0 \cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 try\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 await\cf4 \strokec4  \cf2 \strokec2 dbReadPool\cf5 \strokec5 .
\f1\b \cf6 \strokec6 connect
\f0\b0 \cf4 \strokec4 ()\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 catch\cf4 \strokec4 (\cf2 \strokec2 e\cf4 \strokec4 ) \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 console\cf5 \strokec5 .
\f1\b \cf6 \strokec6 error
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 `\cf7 \strokec7 Failed to connect \cf5 \strokec5 $\{\cf2 \strokec2 e\cf5 \strokec5 \}`\cf4 \strokec4 )\cb1 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl540\partightenfactor0

\f2\i \cf8 \cb3 \strokec8 // function Readtodos
\f0\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf10 \cb3 \strokec10 async\cf4 \strokec4  \cf2 \strokec2 function\cf4 \strokec4  
\f1\b \cf6 \strokec6 readTodos
\f0\b0 \cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 try\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 const\cf4 \strokec4  \cf2 \strokec2 results\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf10 \strokec10 await\cf4 \strokec4  \cf2 \strokec2 dbReadPool\cf5 \strokec5 .
\f1\b \cf6 \strokec6 query
\f0\b0 \cf4 \strokec4 (\cf5 \strokec5 "\cf7 \strokec7 SELECT number,name FROM employees\cf5 \strokec5 "\cf4 \strokec4 )\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 return\cf4 \strokec4  \cf2 \strokec2 results\cf5 \strokec5 .\cf2 \strokec2 rows\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 catch\cf4 \strokec4 (\cf2 \strokec2 e\cf4 \strokec4 )\cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  []\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl540\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
}